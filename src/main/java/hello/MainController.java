package hello;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


@Controller    // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called patientRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private PatientRepository patientRepository;
	
	@GetMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUser (@RequestParam String name
			, @RequestParam String nhsid) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
		
		Patient n = new Patient();
		n.setName(name);
		n.setNhsid(nhsid);
		patientRepository.save(n);
		return "Saved";
	}
	
	// ResponseEntity<Patient>
	// https://medium.com/@konstantinnalum/input-validation-and-unit-testing-of-a-rest-controller-in-spring-boot-304b82ca7526
	@PostMapping(path = "/createpatient")
	public Patient createPatient(@Valid @RequestBody Patient patient) {
		//return ResponseEntity.ok(patientRepository.save(patient));
		
		Patient n = new Patient();
		n.setName(patient.getName());
		n.setNhsid(patient.getNhsid());
		
		return patientRepository.save(n);
	}
	
	
	@GetMapping(path="/all")
	public @ResponseBody Iterable<Patient> getAllPatients() {
		// This returns a JSON or XML with the users
		return patientRepository.findAll();
	}
	
	@GetMapping(path="/getpatient")
	public @ResponseBody Patient getPatientsByID(@RequestParam int id) {
		// This returns a JSON or XML with the users
		return patientRepository.findById(id);
	}
}
